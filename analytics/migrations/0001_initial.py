# Generated by Django 5.2.6 on 2025-09-13 13:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("cards", "0001_initial"),
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CardAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_views", models.PositiveIntegerField(default=0)),
                ("unique_views", models.PositiveIntegerField(default=0)),
                ("total_clicks", models.PositiveIntegerField(default=0)),
                ("unique_clicks", models.PositiveIntegerField(default=0)),
                ("views_7_days", models.PositiveIntegerField(default=0)),
                ("views_30_days", models.PositiveIntegerField(default=0)),
                ("clicks_7_days", models.PositiveIntegerField(default=0)),
                ("clicks_30_days", models.PositiveIntegerField(default=0)),
                ("top_countries", models.JSONField(default=list)),
                ("top_cities", models.JSONField(default=list)),
                ("top_referrers", models.JSONField(default=list)),
                ("direct_traffic", models.PositiveIntegerField(default=0)),
                ("social_traffic", models.PositiveIntegerField(default=0)),
                ("search_traffic", models.PositiveIntegerField(default=0)),
                ("new_vs_returning", models.JSONField(default=dict)),
                ("avg_time_on_page", models.FloatField(default=0.0)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "card",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics",
                        to="cards.card",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_views", models.PositiveIntegerField(default=0)),
                ("total_clicks", models.PositiveIntegerField(default=0)),
                ("views_7_days", models.PositiveIntegerField(default=0)),
                ("views_30_days", models.PositiveIntegerField(default=0)),
                ("clicks_7_days", models.PositiveIntegerField(default=0)),
                ("clicks_30_days", models.PositiveIntegerField(default=0)),
                ("top_countries", models.JSONField(default=list)),
                ("top_cities", models.JSONField(default=list)),
                ("top_referrers", models.JSONField(default=list)),
                ("direct_traffic", models.PositiveIntegerField(default=0)),
                ("social_traffic", models.PositiveIntegerField(default=0)),
                ("search_traffic", models.PositiveIntegerField(default=0)),
                ("new_vs_returning", models.JSONField(default=dict)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AnalyticsEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("view", "View"),
                            ("click", "Click"),
                            ("impression", "Impression"),
                            ("conversion", "Conversion"),
                        ],
                        max_length=20,
                    ),
                ),
                ("ip_address", models.GenericIPAddressField()),
                ("user_agent", models.TextField(blank=True)),
                ("referer", models.URLField(blank=True)),
                ("country", models.CharField(blank=True, max_length=100)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("region", models.CharField(blank=True, max_length=100)),
                ("device_type", models.CharField(blank=True, max_length=50)),
                ("browser", models.CharField(blank=True, max_length=50)),
                ("os", models.CharField(blank=True, max_length=50)),
                ("metadata", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["content_type", "object_id"],
                        name="analytics_a_content_d0d251_idx",
                    ),
                    models.Index(
                        fields=["event_type"], name="analytics_a_event_t_a460ec_idx"
                    ),
                    models.Index(
                        fields=["created_at"], name="analytics_a_created_546677_idx"
                    ),
                    models.Index(
                        fields=["ip_address"], name="analytics_a_ip_addr_93b6c3_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="DailyAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("views", models.PositiveIntegerField(default=0)),
                ("unique_views", models.PositiveIntegerField(default=0)),
                ("clicks", models.PositiveIntegerField(default=0)),
                ("unique_clicks", models.PositiveIntegerField(default=0)),
                ("countries", models.JSONField(default=dict)),
                ("cities", models.JSONField(default=dict)),
                ("referrers", models.JSONField(default=dict)),
                ("direct_traffic", models.PositiveIntegerField(default=0)),
                ("social_traffic", models.PositiveIntegerField(default=0)),
                ("search_traffic", models.PositiveIntegerField(default=0)),
                ("new_users", models.PositiveIntegerField(default=0)),
                ("returning_users", models.PositiveIntegerField(default=0)),
                (
                    "card",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="daily_analytics",
                        to="cards.card",
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
                "unique_together": {("card", "date")},
            },
        ),
    ]
